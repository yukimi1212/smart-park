<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zucc.smart.mapper.UserMapper">

	<resultMap id="UserMap" type="com.zucc.smart.domain.User">
		<result column="user_id" property="user_id" />
		<result column="user_name" property="user_name" />
		<result column="user_pwd" property="user_pwd" />
		<result column="user_gender" property="user_gender" />
		<result column="user_age" property="user_age" />
		<result column="user_phone" property="user_phone" />
		<result column="registration_time" property="registration_time" />	
		<result column="user_identity" property="user_identity" />
	</resultMap>

	<select id="getAllUser" resultMap="UserMap" useCache="false">
    	select user_id, user_name, user_pwd, user_gender, user_age, user_phone, registration_time, user_identity 
    	FROM user  
    </select>
    
	<select id="checkUser" resultMap="UserMap" useCache="false">
    	select user_id, user_name, user_pwd, user_gender, user_age, user_phone, registration_time, user_identity 
    	FROM user  
    	where user_id = #{user_id} and user_pwd = #{user_pwd}
    </select>
    
	<select id="getUserById" parameterType="java.lang.String" resultMap="UserMap" useCache="false">
		SELECT user_id, user_name, user_pwd, user_gender, user_age, user_phone, registration_time, user_identity
		FROM user
		where user_id = #{user_id}
	</select>
	
	<insert id="addUser" parameterType="com.zucc.smart.domain.User">
		INSERT INTO user
		(user_id, user_name, user_pwd, user_gender, user_age, user_phone, registration_time, user_identity)
		values
		(#{user_id}, #{user_name}, #{user_pwd}, #{user_gender}, #{user_age}, #{user_phone}, now(), #{user_identity})
	</insert>
    
    <delete id="deleteUser" parameterType="java.lang.String">
		DELETE
		FROM user
		where user_id = #{user_id}
	</delete>
	
	<select id="searchUser" parameterType="java.lang.String" resultMap="UserMap" useCache="false">
		SELECT user_id, user_name, user_pwd, user_gender, user_age, user_phone, registration_time, user_identity
		FROM user
		where user_id like #{searchWord} or user_name like #{searchWord}
	</select>
	
	<update id="alterUser" parameterType="java.lang.String">
        update user
        <set>
            user_gender = #{user_gender},
            user_age = #{user_age},
            user_phone = #{user_phone},
        </set>
        where user_id = #{user_id}
	</update>
	
</mapper>